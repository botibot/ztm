{"ast":null,"code":"var _jsxFileName = \"/home/sheik/Documents/edu/ztm/05. React.js/robofriends/src/containers/App.Component/App.Component.jsx\";\nimport React, { Component } from \"react\";\nimport SearchBox from \"../../components/SearchBox.Component/SearchBox.Component\";\nimport CardList from \"../../components/CardList.Component/CardList.Component\";\nimport Scroll from \"../../components/Scroll.Component/Scroll.Component\";\nimport ErrorBoundry from \"../../components/ErrorBoundry.Component/ErrorBoundry.Component\"; // import { robots } from \"./robots.js\";\n\nimport \"./App.Styles.css\";\n\nclass App extends Component {\n  constructor() {\n    super(); //! state are things that can change, they like on the parent component\n\n    this.onSearchCahnge = event => {\n      this.setState({\n        searchfield: event.target.value\n      });\n    };\n\n    this.state = {\n      //   * robots: robots,   //* loading from local file not realistic.\n      robots: [],\n      searchfield: \"\"\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then(response => response.json()).then(users => this.setState({\n      robots: users\n    }));\n  }\n\n  render() {\n    const {\n      robots,\n      searchfield\n    } = this.state;\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLocaleLowerCase().includes(searchfield.toLocaleLowerCase());\n    }); // * quick way to display somethign while loading\n\n    return !robots.length ? /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, \"Loading\") :\n    /*#__PURE__*/\n    // ! this sintax <> </> its a shorthand function for react fragments that allows\n    // ! us to return more than one html element.\n    React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"f1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, \"RoboFriends\"), /*#__PURE__*/React.createElement(SearchBox, {\n      searchChange: this.onSearchCahnge,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Scroll, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ErrorBoundry, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardList, {\n      robots: filteredRobots,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/sheik/Documents/edu/ztm/05. React.js/robofriends/src/containers/App.Component/App.Component.jsx"],"names":["React","Component","SearchBox","CardList","Scroll","ErrorBoundry","App","constructor","onSearchCahnge","event","setState","searchfield","target","value","state","robots","componentDidMount","fetch","then","response","json","users","render","filteredRobots","filter","robot","name","toLocaleLowerCase","includes","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,0DAAtB;AACA,OAAOC,QAAP,MAAqB,wDAArB;AACA,OAAOC,MAAP,MAAmB,oDAAnB;AACA,OAAOC,YAAP,MAAyB,gEAAzB,C,CACA;;AACA,OAAO,kBAAP;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAC1BM,EAAAA,WAAW,GAAG;AACZ,YADY,CAEZ;;AAFY,SAgBdC,cAhBc,GAgBIC,KAAD,IAAW;AAC1B,WAAKC,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAA5B,OAAd;AACD,KAlBa;;AAGZ,SAAKC,KAAL,GAAa;AACX;AACAC,MAAAA,MAAM,EAAE,EAFG;AAGXJ,MAAAA,WAAW,EAAE;AAHF,KAAb;AAKD;;AAEDK,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,KAAD,IAAW,KAAKX,QAAL,CAAc;AAAEK,MAAAA,MAAM,EAAEM;AAAV,KAAd,CAFnB;AAGD;;AAMDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEP,MAAAA,MAAF;AAAUJ,MAAAA;AAAV,QAA0B,KAAKG,KAArC;AACA,UAAMS,cAAc,GAAGR,MAAM,CAACS,MAAP,CAAeC,KAAD,IAAW;AAC9C,aAAOA,KAAK,CAACC,IAAN,CACJC,iBADI,GAEJC,QAFI,CAEKjB,WAAW,CAACgB,iBAAZ,EAFL,CAAP;AAGD,KAJsB,CAAvB,CAFO,CAOP;;AACA,WAAO,CAACZ,MAAM,CAACc,MAAR,gBACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADK;AAAA;AAGL;AACA;AACA,2DACE;AAAK,MAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE,oBAAC,SAAD;AAAW,MAAA,YAAY,EAAE,KAAKrB,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAEe,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CAHF,CADF,CALF;AAiBD;;AA9CyB;;AAiD5B,eAAejB,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport SearchBox from \"../../components/SearchBox.Component/SearchBox.Component\";\nimport CardList from \"../../components/CardList.Component/CardList.Component\";\nimport Scroll from \"../../components/Scroll.Component/Scroll.Component\";\nimport ErrorBoundry from \"../../components/ErrorBoundry.Component/ErrorBoundry.Component\";\n// import { robots } from \"./robots.js\";\nimport \"./App.Styles.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    //! state are things that can change, they like on the parent component\n    this.state = {\n      //   * robots: robots,   //* loading from local file not realistic.\n      robots: [],\n      searchfield: \"\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ robots: users }));\n  }\n\n  onSearchCahnge = (event) => {\n    this.setState({ searchfield: event.target.value });\n  };\n\n  render() {\n    const { robots, searchfield } = this.state;\n    const filteredRobots = robots.filter((robot) => {\n      return robot.name\n        .toLocaleLowerCase()\n        .includes(searchfield.toLocaleLowerCase());\n    });\n    // * quick way to display somethign while loading\n    return !robots.length ? (\n      <h1>Loading</h1>\n    ) : (\n      // ! this sintax <> </> its a shorthand function for react fragments that allows\n      // ! us to return more than one html element.\n      <>\n        <div className=\"tc\">\n          <h1 className=\"f1\">RoboFriends</h1>\n          <SearchBox searchChange={this.onSearchCahnge} />\n          <Scroll>\n            <ErrorBoundry>\n              <CardList robots={filteredRobots} />\n            </ErrorBoundry>\n          </Scroll>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}